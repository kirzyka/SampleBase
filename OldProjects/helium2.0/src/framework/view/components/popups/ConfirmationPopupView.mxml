<?xml version="1.0" encoding="utf-8"?>
<popup:BasePopupView
	xmlns:popup="framework.view.components.popups.*"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:control="h2olib.control.*">
	
	<mx:Script>
		<![CDATA[
			import services.vo.GlobalSettings;
			import framework.view.components.popups.events.PopupEvent;
			
			
			// ================================================================= //
			//                             VARIABLES                             //
			// ================================================================= //
			/**
			 *  This property is main description for view about what this delete
			 *  popup.
			 */
			private var _description:String;
			/**
			 *  This property is sub description for view about what this delete
			 *  popup.
			 */
			private var _subDescription:String;
			
			// ================================================================= //
			//                        COMMON METHODS                             //
			// ================================================================= //
			protected function handleConfirm():void
			{
				dispatchEvent(new PopupEvent(PopupEvent.CONFIRM));
				completeCall();
			}
			protected function handleDecline():void
			{
				dispatchEvent(new PopupEvent(PopupEvent.DECLINE));
				close();
			}
			
			// ================================================================= //
			//                        GETTERS AND SETTERS                        //
			// ================================================================= //
			[Bindable(event="descriptionChanged")]
			/**
			 *  Main description for view about what this delete popup.
			 */
			public function get description():String
			{
				return _description;
			}
			/**
			 *  @private
			 */
			public function set description(value:String):void
			{
				_description = value;
				
				dispatchEvent(new Event("descriptionChanged"));
			}
			
			[Bindable(event="subDescriptionChanged")]
			/**
			 *  Main description for view about what this delete popup.
			 */
			public function get subDescription():String
			{
				return _subDescription;
			}
			/**
			 *  @private
			 */
			public function set subDescription(value:String):void
			{
				_subDescription = value;
				
				dispatchEvent(new Event("subDescriptionChanged"));
			}
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" height="100%">
		<control:MultiLineLabel id="lbDescription"
			text="{description}"
			textAlign="center"
			fontWeight="bold"
			width="100%"/>
		<control:MultiLineLabel id="lbSubDescription"
			text="{subDescription}"
			textAlign="center"
			width="100%"/>
	</mx:VBox>
	
	<mx:HBox width="100%" horizontalAlign="right">
		<mx:Button
			label="{model.locale.Global_Button_Yes}"
			click="handleConfirm()"
			width="{GlobalSettings.BUTTON_WIDTH}"/>
		<mx:Button
			label="{model.locale.Global_Button_Next}"
			click="handleDecline()"
			width="{GlobalSettings.BUTTON_WIDTH}"/>
	</mx:HBox>
</popup:BasePopupView>