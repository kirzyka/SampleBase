<?xml version="1.0" encoding="utf-8"?>
<sub:VSubWindow xmlns:sub="framework.core.view.*"  xmlns:mx="http://www.adobe.com/2006/mxml" width="100%">

	<mx:Script>
		<![CDATA[
			import services.vo.items.ItemsGroupVO;
			import services.vo.reports.PaymentJournalVO;
			import services.vo.reports.NoShowsReportVO;
			import services.vo.reports.InHouseReportVO;
			import services.vo.common.loyaltyPrograms.LoyaltyProgramsVO;
			import framework.model.AppModelLocator;
			import services.vo.GlobalFunctions;
			import services.events.reports.GetReportEvent;
			import services.vo.backend.ReportVO;
			import services.vo.common.SourceCodesVO;
			import services.vo.backend.RoomSettingObjectVO;
			import services.vo.common.MarketCodesVO;
			import services.vo.hotels.HotelRoomWithBedTypesObjectVO;
			import services.vo.GlobalSettings;
			import services.vo.GlobalStorage;
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import services.events.miscellaneous.loyaltyPrograms.GetLoyaltyProgramsEvent;
			import services.controller.AppController;
			import services.events.roomSettings.GetRoomSettingsDataEvent;
			import mx.collections.ArrayCollection;
			import services.vo.reports.ArrivalReportVO;


			//config
  			[Bindable]
  			public var indicatorGapFormItem:int = 14;

  			/**
			 *	Get reports. This function we have in parent.
			*/
  			public var getReports:Function = new Function();

  			/**
			 *	Get selected All for all list. This function we have in parent.
			*/
  			public var allClick:Function = new Function();

			public var reportType:int;
			 			

  			[Bindable]
			private var cashier:ArrayCollection = new ArrayCollection();

			public function init():void
			{
				cashier.removeAll();
				// fill cash shift list
				var temp:Object;
				for (var i:int = 1; i <= 3; i++)
				{
					temp = new Object();
					if (i == 1)
						temp.label = "Morning";
					if (i == 2)
						temp.label = "Evening";
					if (i == 3)
						temp.label = "Night";
					temp.num = i;
					temp.bIsSelected = false;
					cashier.addItem(temp);
				}
			}

			/**
			 * print report of Journal Report
			 */			
			private function handlePrintPaymentJournalReport():void
			{
				var i:int = 0;
				var pjReport:PaymentJournalVO = new PaymentJournalVO();
				var tempLength:int;				
				
				if (!paymentJournalAllCashier.selected)
				{
					tempLength = cashier.length;
					for (i = 0; i < tempLength; i++)
					{
						if (cashier.getItemAt(i).bIsSelected)
						{
							pjReport.aCashier.push(cashier.getItemAt(i).num);
						}
					}
				}

				if (!paymentJournalAllRoomType.selected)
				{
					tempLength = model.hotelsModule.hotelRoomTypes.length;
					for (i = 0; i < tempLength; i++)
					{
						if ((model.hotelsModule.hotelRoomTypes.getItemAt(i) as HotelRoomWithBedTypesObjectVO).oRoomQuality.bIsSelected)
						{
							pjReport.aRoomType.push((model.hotelsModule.hotelRoomTypes.getItemAt(i) as HotelRoomWithBedTypesObjectVO).oRoomQuality.lQualityId);
						}
					}
				}

				if (!paymentJournalAllGroup.selected)
				{
					tempLength = model.transactionModule.systemGroupsList.length;
					for (i = 0; i < tempLength; i++)
					{
						if ((model.transactionModule.systemGroupsList.getItemAt(i) as ItemsGroupVO).bSelected)
						{
							pjReport.aTransactionGroup.push((model.transactionModule.systemGroupsList.getItemAt(i) as ItemsGroupVO).lId);
						}
					}
				}

				pjReport.sDateFrom = DateField.dateToString(pjArrival.selectedDate, GlobalSettings.DATE_SERVER_FORMAT);
				pjReport.sDateTo = DateField.dateToString(pjDeparture.selectedDate, GlobalSettings.DATE_SERVER_FORMAT);

				getReports( pjReport, reportType,  DateField.dateToString(GlobalFunctions.getDate(), GlobalSettings.DATE_SERVER_FORMAT));
			}



			/**
			*	Get selected references for RoomTypes.
			*/

			public function updateSelectionArrivalRoomType(index:int,selected:Boolean):void
			{
				var tempSelect:Boolean = (model.hotelsModule.hotelRoomTypes.getItemAt(index) as HotelRoomWithBedTypesObjectVO).oRoomQuality.bIsSelected;

				if (tempSelect) tempSelect = false
				else tempSelect = true;

				(model.hotelsModule.hotelRoomTypes.getItemAt(index) as HotelRoomWithBedTypesObjectVO).oRoomQuality.bIsSelected = tempSelect;
			}

			/**
			 *	Get selected references for Group.
			*/

			public function updateSelectionGroup (index:int,selected:Boolean):void
			{
				var tempSelect:Boolean = (model.transactionModule.systemGroupsList.getItemAt(index) as ItemsGroupVO).bSelected;

				if (tempSelect) tempSelect = false
				else tempSelect = true;

				(model.transactionModule.systemGroupsList.getItemAt(index) as ItemsGroupVO).bSelected = tempSelect;
			}

			/**
			 *	Get selected cash shifts for Payments of the day.
			*/
			public function updateSelectionJournalCashier(index:int,selected:Boolean):void
			{
				var tempSelect:Boolean = cashier.getItemAt(index).bSelected;

				if (tempSelect) tempSelect = false
				else tempSelect = true;

				cashier.getItemAt(index).bIsSelected = tempSelect;
			}

		]]>
	</mx:Script>


		<mx:Panel label="Payment Journal Report" width="100%" layout="vertical" styleName="reportPanel">
			<mx:HBox>
				<mx:Form>
					<mx:FormItem label="Date from:" labelWidth="120">
						<mx:DateField id="pjArrival" width="{GlobalSettings.WIDTH_DATE_FIELD}" 
							selectedDate="{GlobalFunctions.getDate()}" formatString="{GlobalSettings.DATE_FORMAT}"/>
					</mx:FormItem>
					<mx:FormItem label="Date to:" labelWidth="120">
						<mx:DateField id="pjDeparture" width="{GlobalSettings.WIDTH_DATE_FIELD}" 
							selectedDate="{GlobalFunctions.getDate()}" formatString="{GlobalSettings.DATE_FORMAT}"/>
					</mx:FormItem>
					
				</mx:Form>
				<mx:Form>
					<mx:FormItem label="Room Types:" labelWidth="120" indicatorGap="{indicatorGapFormItem}">
							<mx:List id="pjRoomType" enabled="false"
								dataProvider="{model.hotelsModule.hotelRoomTypes}"
								width="150" height="100">
								<mx:itemRenderer>
									<mx:Component>
										<mx:CheckBox
											label="{data.oRoomQuality.sQualityName}"
											selected="{data.oRoomQuality.bIsSelected}"
											change="{outerDocument.updateSelectionArrivalRoomType( outerDocument.pjRoomType.selectedIndex, this.selected)}"/>
									</mx:Component>
								</mx:itemRenderer>
							</mx:List>
							<mx:CheckBox id="paymentJournalAllRoomType" label="All room types" selected="true"
								change="{allClick(paymentJournalAllRoomType, pjRoomType)}"/>
					</mx:FormItem>

					<mx:FormItem label="Cashier:" labelWidth="120" indicatorGap="{indicatorGapFormItem}">
							<mx:Label text="{cashier.length}" visible="false" height="0"/> <!--tanec s bubnom, bez label list pustoy-->
							<mx:List id="pjCashShift" enabled="false"
								dataProvider="{cashier}"
								width="150" height="100">
								<mx:itemRenderer>
									<mx:Component>
										<mx:CheckBox
											label="{data.label}"
											selected="{data.bIsSelected}"
											change="{outerDocument.updateSelectionJournalCashier( outerDocument.pjCashShift.selectedIndex, this.selected)}"/>
									</mx:Component>
								</mx:itemRenderer>
							</mx:List>
							<mx:CheckBox id="paymentJournalAllCashier" label="All cashiers" selected="true"
								change="{allClick(paymentJournalAllCashier, pjCashShift)}"/>
					</mx:FormItem>
				</mx:Form>
				<mx:Form>
					<mx:FormItem label="Group:" labelWidth="120" indicatorGap="{indicatorGapFormItem}">
						<mx:List id="pjGroup" enabled="false"
								dataProvider="{model.transactionModule.systemGroupsList}"
								width="200" height="100">
								<mx:itemRenderer>
									<mx:Component>
										<mx:CheckBox
											label="{data.sName}"
											selected="{data.bSelected}"
											change="{outerDocument.updateSelectionGroup( outerDocument.pjGroup.selectedIndex, this.selected)}"/>
									</mx:Component>
								</mx:itemRenderer>
						</mx:List>
						<mx:CheckBox id="paymentJournalAllGroup" label="All group" selected="true"
								change="{allClick(paymentJournalAllGroup, pjGroup)}"/>
					</mx:FormItem>
				</mx:Form>
			</mx:HBox>
			<mx:HBox width="100%" horizontalAlign="right" paddingRight="15">
				<mx:Button label="Print Report" click="handlePrintPaymentJournalReport()"/>
			</mx:HBox>
		</mx:Panel>
</sub:VSubWindow>