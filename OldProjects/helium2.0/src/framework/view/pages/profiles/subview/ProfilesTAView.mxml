<?xml version="1.0" encoding="utf-8"?>
<VSubWindow
	xmlns="framework.core.view.*"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:pager="h2olib.control.pager.*"
	xmlns:searchBox="h2olib.control.searchBox.*"

	label="{model.locale.Profiles_TravelAgency_Title}">
	
	<mx:Script>
		<![CDATA[
			import framework.view.pages.inHouse.events.AssignProfileEvent;
			import services.business.profiles.ProfileDelegate;
			import services.events.profiles.travelAgency.GetTravelAgencyListEvent;
			import services.events.profiles.company.DeleteCompanyEvent;
			import framework.view.components.popups.DeletePopupView;
			import framework.view.components.popups.events.PopupEvent;
			import framework.view.components.popups.BasePopupView;
			import framework.view.pages.profiles.popups.travelAgency.SaveTAProfilesPopupView;
			import services.vo.profiles.CompanyProfileVO;
			import services.vo.profiles.CompanyProfileViewVO;
			import services.events.profiles.company.GetCompanyByIdEvent;
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import services.controller.AppController;
			import services.events.profiles.company.GetCompanyListEvent;
			import services.vo.GlobalSettings;
			import mx.managers.PopUpManagerChildList;
			import framework.view.pages.profiles.popups.company.SaveCompanyProfilesPopupView;
			import framework.managers.PopUpManagerExt;
			import mx.core.IFlexDisplayObject;
			import h2olib.control.pager.event.PagerEvent;
			import framework.module.ProfilesModule;
			import framework.model.AppModelLocator;
			
			[Bindable]
			public var lock:Boolean = false;
			[Bindable]
			public var visibleRowCount:Number;
			
			private var isOpen:Boolean = false;
			
			private function calcVisibleRow():void
			{
				visibleRowCount = Math.round((dgTraveAgencyList.height - dgTraveAgencyList.headerHeight - 16) / dgTraveAgencyList.rowHeight);
				isOpen = true;
			}
			
			override public function update():void
			{
				searchField.text = "";
				// check need update viewed profiles
				if (isOpen)
				{
					//handleSearch();
				}
			}
			
			private function handleSearch():void
			{
				var event:GetTravelAgencyListEvent = new GetTravelAgencyListEvent(ProfileDelegate.GET_TRAVEL_AGENCY_LIST);
				event.pattern = searchField.text;
				event.page = 1;
				event.count = pager.itemPerPageCount;
				CairngormEventDispatcher.getInstance().dispatchEvent(event);
			}
			
			private function addCompanyProfile():void
			{
				var pop:SaveTAProfilesPopupView = PopUpManagerExt.createPopUp(this, SaveTAProfilesPopupView) as SaveTAProfilesPopupView;
				pop.selectedIndex = dgTraveAgencyList.dataProvider.length;
				pop.show();
			}
			
			private function tryEditCompanyProfile():void
			{
				if (!lock)
				{
					var event:GetCompanyByIdEvent = new GetCompanyByIdEvent(ProfileDelegate.GET_TRAVEL_AGENCY_BY_ID);
					event.id = (dgTraveAgencyList.selectedItem as CompanyProfileViewVO).lMainId;
					event.callBack = editCompanyProfile;
					CairngormEventDispatcher.getInstance().dispatchEvent(event);
				}
				else
				{
					var evt:AssignProfileEvent = new AssignProfileEvent(AssignProfileEvent.PROFILE_SELECTED);
					evt.profileId = (dgTraveAgencyList.selectedItem as CompanyProfileViewVO).lMainId;
					evt.isCompany = true;
					owner.dispatchEvent(evt);
				}
				
				
			}
			
			private function editCompanyProfile():void
			{
				var pop:IFlexDisplayObject = PopUpManagerExt.createPopUp(this, SaveTAProfilesPopupView);
				
				(pop as SaveTAProfilesPopupView).data = model.profilesModule.curTravelAgency;
				(pop as SaveTAProfilesPopupView).selectedIndex = dgTraveAgencyList.selectedIndex;
				
				PopUpManagerExt.centerPopUp(pop);
			}
			
			/**
			 *  Handle for get new block of 
			 */
			private function handleGetProfiles(e:PagerEvent):void
			{
				var event:GetTravelAgencyListEvent = new GetTravelAgencyListEvent(ProfileDelegate.GET_TRAVEL_AGENCY_LIST);
				event.pattern = searchField.text;
				event.page = e.index;
				event.count = e.count;
				CairngormEventDispatcher.getInstance().dispatchEvent(event);
			}
			
			private function openDeletePopup():void
			{
				var pop:DeletePopupView = PopUpManagerExt.createPopUp(this, DeletePopupView) as DeletePopupView;
				pop.title = model.locale.Profiles_TravelAgency_Popups_Delete_Title;
				pop.description = model.locale.Profiles_TravelAgency_Popups_Delete_Description;
				pop.addEventListener(PopupEvent.DELETE_HANDLER, tryDeleteTravelAgency);
			}
			
			/**
			 *  Try to delete selected routing item by opened popup.
			 *  
			 *  @param e:PopupDeleteEvent
			 */
			private function tryDeleteTravelAgency(e:PopupEvent):void
			{
				(e.target as DeletePopupView).removeEventListener(PopupEvent.DELETE_HANDLER, tryDeleteTravelAgency);
				
				var event:DeleteCompanyEvent = new DeleteCompanyEvent(ProfileDelegate.DELETE_TRAVEL_AGENCY);
				
				event.id = (dgTraveAgencyList.selectedItem as CompanyProfileViewVO).lMainId;
				event.index = dgTraveAgencyList.selectedIndex;
				event.callBack = (e.target as DeletePopupView).completeCall;
				
				CairngormEventDispatcher.getInstance().dispatchEvent(event);
			}
		]]>
	</mx:Script>
	
	<searchBox:SearchBox
		id="searchField"
		label="{model.locale.Profiles_TravelAgency_SearchBox_TravelAgencyName}"
		enter="handleSearch()"
		changeByFocus="handleSearch()"
		width="250"
		height="24"/>
	
	<mx:DataGrid
		id="dgTraveAgencyList"
		dataProvider="{model.profilesModule.travelAgencyList}"
		doubleClickEnabled="true"
		doubleClick="tryEditCompanyProfile()"
		creationComplete="calcVisibleRow()"
		width="100%" height="100%" headerHeight="22" rowHeight="33" styleName="grid">
		<mx:columns>
			<mx:DataGridColumn
				headerText="{model.locale.Profiles_TravelAgency_Columns_TravelAgentName}"
				dataField="sName"/>
			<mx:DataGridColumn
				headerText="{model.locale.Profiles_TravelAgency_Columns_City}"
				dataField="sCity"/>
			<mx:DataGridColumn
				headerText="{model.locale.Profiles_TravelAgency_Columns_Country}"
				dataField="sCountry"/>
			<mx:DataGridColumn
				headerText="{model.locale.Profiles_TravelAgency_Columns_Phone}"
				dataField="sPhone"/>
			<mx:DataGridColumn
				headerText="{model.locale.Profiles_TravelAgency_Columns_Email}"
				dataField="sEmail"/>
		</mx:columns>
	</mx:DataGrid>
	
	<mx:HBox width="100%" horizontalAlign="right">
		<mx:Button
			label="{model.locale.Global_Button_Add}"
			fontWeight="bold"
			click="addCompanyProfile()"
			width="{GlobalSettings.BUTTON_WIDTH_APPLY}"/>
		<mx:Button
			label="{model.locale.Global_Button_Edit}"
			fontWeight="bold"
			enabled="{dgTraveAgencyList.selectedItem}"
			visible="{!lock}"
			click="tryEditCompanyProfile()"
			width="{GlobalSettings.BUTTON_WIDTH_APPLY}"/>
		<mx:Button
			label="{model.locale.Global_Button_Delete}"
			fontWeight="bold"
			enabled="{dgTraveAgencyList.selectedItem}"
			visible="{!lock}"
			click="openDeletePopup()"
			width="{GlobalSettings.BUTTON_WIDTH_APPLY}"/>
		<mx:Spacer width="100%"/>
		<pager:Pager id="pager"
			count="{model.profilesModule.travelAgencyProfileCount}"
			pageChange="handleGetProfiles(event)"
			fit="{visibleRowCount}"/>
	</mx:HBox>
</VSubWindow>