<?xml version="1.0" encoding="utf-8"?>
<popup:CheckOutPopupView
	xmlns:popup="framework.view.pages.checkOut.popups.*"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	title="Merge Items">
	
	<mx:Script>
		<![CDATA[
			import framework.core.utils.UtilsGolobal;
			import mx.controls.dataGridClasses.DataGridColumn;
			import services.business.checkOut.CheckOutDelegate;
			import services.business.items.ItemsDelegate;
			import services.events.checkOut.MergeItemsEvent;
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import services.controller.AppController;
			import services.events.items.arrangementCodes.GetArrangementsEvent;
			import mx.utils.ArrayUtil;
			import services.vo.checkOut.itemRouting.ItemCheckOutVO;
			import services.vo.items.ArrangementCodeVO;
			import services.vo.GlobalSettings;
			
			private var _selectedItems:Array;
			
			private var _mergeCodes:Array = [];
			[Bindable]
			private var _viewMergeCodes:Array = [];
			
			public var selectedIndexes:Array = [];
			
			[Bindable(event="mergeItemsChanged")]
			public function get selectedItems():Array
			{
				return _selectedItems;
			}
			
			public function set selectedItems(items:Array):void
			{
				_selectedItems = items;
				
				var mainArgCodes:Array = (_selectedItems[0] as ItemCheckOutVO).aArrangemetIds;
				// for each arramgement codes for first item do
				for(var i:int = 0; i < mainArgCodes.length; i++)
				{
					var check:Array = [];
					for(var j:int = 1; j < _selectedItems.length; j++)
					{
						check[j-1] = false;
						var itemArgCodes:Array = (_selectedItems[j] as ItemCheckOutVO).aArrangemetIds;
						for(var k:int = 0; k < itemArgCodes.length; k++)
						{
							if (mainArgCodes[i] == itemArgCodes[k])
							{
								check[j-1] = true;
								break;
							}
						}
					}
					var add:Boolean = true;
					for(j = 0; j < check.length; j++)
					{
						if (!check[j])
						{
							add = false;
							break;
						}
					}
					if (add) _mergeCodes.push(mainArgCodes[i]);
				}
				
				if (_mergeCodes.length > 0)
				{
					var event:GetArrangementsEvent = new GetArrangementsEvent(ItemsDelegate.GET_ARRANGEMENTS_LIST);
					event.callBack = serialize;
					CairngormEventDispatcher.getInstance().dispatchEvent(event);
				}
				
				dispatchEvent(new Event("mergeItemsChanged"));
			}
			
			private function serialize():void
			{
				_viewMergeCodes = [];
				for each(var code:ArrangementCodeVO in model.transactionModule.arrangementCodesList)
				{
					for(var i:int = 0; i < _mergeCodes.length; i++)
					{
						if (code.lId == _mergeCodes[i])
						{
							_viewMergeCodes.push(code);
						}
					}
				}
			}
			
			private function handleMergeItems():void
			{
				var event:MergeItemsEvent = new MergeItemsEvent(CheckOutDelegate.MERGE_ITEMS);
				
				for each(var item:ItemCheckOutVO in _selectedItems)
				{
					event.itemMergeIds.push(item.lId);
				}
				event.selectedIndexes = selectedIndexes;
				event.selectedItems = selectedItems;
				event.argId = (dgArgCodes.selectedItem as ArrangementCodeVO).lId;
				// optional data
				event.isAttached = isAttached;
				event.attachedId = attachedId;
				event.callBack = completeCall;
				CairngormEventDispatcher.getInstance().dispatchEvent(event);
			}
			
			private function priceLabelFunction(item:ItemCheckOutVO, column:DataGridColumn):String
			{
				var result:String = "";
				result = UtilsGolobal.round(item.fPrice,2).toString();
				return result;
			}
		]]>
	</mx:Script>
	
	<mx:DataGrid
		dataProvider="{selectedItems}"
		enabled="false"
		width="100%" height="100%">
		<mx:columns>
			<mx:DataGridColumn
				headerText="Date"
				dataField="dDate"
				width="80"/>
			<mx:DataGridColumn
				headerText="Code"
				dataField="sTransCode"
				width="120"/>
			<mx:DataGridColumn
				headerText="Transaction Name"
				dataField="sTransName"/>
			<mx:DataGridColumn
				headerText="Price"
				labelFunction="priceLabelFunction"
				width="80"/>
		</mx:columns>
	</mx:DataGrid>
	
	<mx:Label text="Arrangement Codes" fontWeight="bold"/>
	
	<mx:DataGrid id="dgArgCodes"
		dataProvider="{_viewMergeCodes}"
		width="100%" height="100%">
		<mx:columns>
			<mx:DataGridColumn
				headerText="Code"
				dataField="sCode"
				width="100"/>
			<mx:DataGridColumn
				headerText="Description"
				dataField="sName"/>
		</mx:columns>
	</mx:DataGrid>
	
	<mx:HBox width="100%" horizontalAlign="right">
		<mx:Button
			label="{model.locale.Global_Button_Apply}"
			enabled="{dgArgCodes.selectedItem}"
			click="handleMergeItems()"
			width="{GlobalSettings.BUTTON_WIDTH_APPLY}"/>
		<mx:Button
			label="{model.locale.Global_Button_Cancel}"
			click="close()"
			width="{GlobalSettings.BUTTON_WIDTH}"/>
	</mx:HBox>
</popup:CheckOutPopupView>